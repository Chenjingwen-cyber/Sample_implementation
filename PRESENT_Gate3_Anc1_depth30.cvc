X_0: ARRAY BITVECTOR(6) OF BITVECTOR(16);
X_1: ARRAY BITVECTOR(6) OF BITVECTOR(16);
X_2: ARRAY BITVECTOR(6) OF BITVECTOR(16);
X_3: ARRAY BITVECTOR(6) OF BITVECTOR(16);
Anc_0: ARRAY BITVECTOR(6) OF BITVECTOR(16);
depth_0: ARRAY BITVECTOR(6) OF BITVECTOR(16);
depth_1: ARRAY BITVECTOR(6) OF BITVECTOR(16);
depth_2: ARRAY BITVECTOR(6) OF BITVECTOR(16);
depth_3: ARRAY BITVECTOR(6) OF BITVECTOR(16);
depth_4: ARRAY BITVECTOR(6) OF BITVECTOR(16);
Y_0 , Y_1 , Y_2 , Y_3: BITVECTOR(16);
T_0 , T_1 , T_2: BITVECTOR(16);
Q_0 , Q_1 , Q_2 , Q_3 , Q_4 , Q_5 , Q_6 , Q_7 , Q_8: BITVECTOR(16);
a_0 , a_1 , a_2 , a_3 , a_4 , a_5 , a_6 , a_7 , a_8 , a_9 , a_10 , a_11 , a_12 , a_13 , a_14 , a_15 , a_16 , a_17 , a_18 , a_19 , a_20 , a_21 , a_22 , a_23 , a_24 , a_25 , a_26 , a_27 , a_28 , a_29 , a_30 , a_31 , a_32 , a_33 , a_34 , a_35 , a_36 , a_37 , a_38 , a_39 , a_40 , a_41 , a_42 , a_43 , a_44: BITVECTOR(16);
b_0 , b_1 , b_2 , b_3 , b_4 , b_5: BITVECTOR(16);
c_0 , c_1 , c_2 , c_3 , c_4 , c_5 , c_6 , c_7 , c_8 , c_9 , c_10 , c_11 , c_12 , c_13 , c_14: BITVECTOR(16);
d_0 , d_1 , d_2 , d_3 , d_4 , d_5 , d_6 , d_7 , d_8 , d_9 , d_10 , d_11 , d_12 , d_13 , d_14: BITVECTOR(16);
ASSERT( X_0[0bin000000]  = 0bin0000000011111111 );
ASSERT( X_1[0bin000000]  = 0bin0000111100001111 );
ASSERT( X_2[0bin000000]  = 0bin0011001100110011 );
ASSERT( X_3[0bin000000]  = 0bin0101010101010101 );
ASSERT( Y_0 = 0bin1001101101110000 );
ASSERT( Y_1 = 0bin1110000101101100 );
ASSERT( Y_2 = 0bin0011001011100101 );
ASSERT( Y_3 = 0bin0101100110100110 );
ASSERT( Anc_0[0bin000000]  = 0bin0000000000000000 );
ASSERT( depth_0[0bin000000]  = 0bin0000000000000000 );
ASSERT( depth_1[0bin000000]  = 0bin0000000000000000 );
ASSERT( depth_2[0bin000000]  = 0bin0000000000000000 );
ASSERT( depth_3[0bin000000]  = 0bin0000000000000000 );
ASSERT( depth_4[0bin000000]  = 0bin0000000000000000 );
ASSERT( a_0 = 0bin1111111111111111 OR a_0 = 0bin0000000000000000 ); 
ASSERT( a_1 = 0bin1111111111111111 OR a_1 = 0bin0000000000000000 ); 
ASSERT( a_2 = 0bin1111111111111111 OR a_2 = 0bin0000000000000000 ); 
ASSERT( a_3 = 0bin1111111111111111 OR a_3 = 0bin0000000000000000 ); 
ASSERT( a_4 = 0bin1111111111111111 OR a_4 = 0bin0000000000000000 ); 
ASSERT( a_5 = 0bin1111111111111111 OR a_5 = 0bin0000000000000000 ); 
ASSERT( a_6 = 0bin1111111111111111 OR a_6 = 0bin0000000000000000 ); 
ASSERT( a_7 = 0bin1111111111111111 OR a_7 = 0bin0000000000000000 ); 
ASSERT( a_8 = 0bin1111111111111111 OR a_8 = 0bin0000000000000000 ); 
ASSERT( a_9 = 0bin1111111111111111 OR a_9 = 0bin0000000000000000 ); 
ASSERT( a_10 = 0bin1111111111111111 OR a_10 = 0bin0000000000000000 ); 
ASSERT( a_11 = 0bin1111111111111111 OR a_11 = 0bin0000000000000000 ); 
ASSERT( a_12 = 0bin1111111111111111 OR a_12 = 0bin0000000000000000 ); 
ASSERT( a_13 = 0bin1111111111111111 OR a_13 = 0bin0000000000000000 ); 
ASSERT( a_14 = 0bin1111111111111111 OR a_14 = 0bin0000000000000000 ); 
ASSERT( a_15 = 0bin1111111111111111 OR a_15 = 0bin0000000000000000 ); 
ASSERT( a_16 = 0bin1111111111111111 OR a_16 = 0bin0000000000000000 ); 
ASSERT( a_17 = 0bin1111111111111111 OR a_17 = 0bin0000000000000000 ); 
ASSERT( a_18 = 0bin1111111111111111 OR a_18 = 0bin0000000000000000 ); 
ASSERT( a_19 = 0bin1111111111111111 OR a_19 = 0bin0000000000000000 ); 
ASSERT( a_20 = 0bin1111111111111111 OR a_20 = 0bin0000000000000000 ); 
ASSERT( a_21 = 0bin1111111111111111 OR a_21 = 0bin0000000000000000 ); 
ASSERT( a_22 = 0bin1111111111111111 OR a_22 = 0bin0000000000000000 ); 
ASSERT( a_23 = 0bin1111111111111111 OR a_23 = 0bin0000000000000000 ); 
ASSERT( a_24 = 0bin1111111111111111 OR a_24 = 0bin0000000000000000 ); 
ASSERT( a_25 = 0bin1111111111111111 OR a_25 = 0bin0000000000000000 ); 
ASSERT( a_26 = 0bin1111111111111111 OR a_26 = 0bin0000000000000000 ); 
ASSERT( a_27 = 0bin1111111111111111 OR a_27 = 0bin0000000000000000 ); 
ASSERT( a_28 = 0bin1111111111111111 OR a_28 = 0bin0000000000000000 ); 
ASSERT( a_29 = 0bin1111111111111111 OR a_29 = 0bin0000000000000000 ); 
ASSERT( a_30 = 0bin1111111111111111 OR a_30 = 0bin0000000000000000 ); 
ASSERT( a_31 = 0bin1111111111111111 OR a_31 = 0bin0000000000000000 ); 
ASSERT( a_32 = 0bin1111111111111111 OR a_32 = 0bin0000000000000000 ); 
ASSERT( a_33 = 0bin1111111111111111 OR a_33 = 0bin0000000000000000 ); 
ASSERT( a_34 = 0bin1111111111111111 OR a_34 = 0bin0000000000000000 ); 
ASSERT( a_35 = 0bin1111111111111111 OR a_35 = 0bin0000000000000000 ); 
ASSERT( a_36 = 0bin1111111111111111 OR a_36 = 0bin0000000000000000 ); 
ASSERT( a_37 = 0bin1111111111111111 OR a_37 = 0bin0000000000000000 ); 
ASSERT( a_38 = 0bin1111111111111111 OR a_38 = 0bin0000000000000000 ); 
ASSERT( a_39 = 0bin1111111111111111 OR a_39 = 0bin0000000000000000 ); 
ASSERT( a_40 = 0bin1111111111111111 OR a_40 = 0bin0000000000000000 ); 
ASSERT( a_41 = 0bin1111111111111111 OR a_41 = 0bin0000000000000000 ); 
ASSERT( a_42 = 0bin1111111111111111 OR a_42 = 0bin0000000000000000 ); 
ASSERT( a_43 = 0bin1111111111111111 OR a_43 = 0bin0000000000000000 ); 
ASSERT( a_44 = 0bin1111111111111111 OR a_44 = 0bin0000000000000000 ); 
ASSERT( ( ( a_0 = 0bin1111111111111111 ) AND ( a_1 = 0bin0000000000000000 ) AND ( a_2 = 0bin0000000000000000 ) AND ( a_3 = 0bin0000000000000000 ) AND ( a_4 = 0bin0000000000000000 ) ) OR ( ( a_0 = 0bin0000000000000000 )  AND ( a_1 = 0bin1111111111111111 )  AND ( a_2 = 0bin0000000000000000 )  AND ( a_3 = 0bin0000000000000000 )  AND ( a_4 = 0bin0000000000000000 ) ) OR ( ( a_0 = 0bin0000000000000000 )  AND ( a_1 = 0bin0000000000000000 )  AND ( a_2 = 0bin1111111111111111 )  AND ( a_3 = 0bin0000000000000000 )  AND ( a_4 = 0bin0000000000000000 ) ) OR ( ( a_0 = 0bin0000000000000000 )  AND ( a_1 = 0bin0000000000000000 )  AND ( a_2 = 0bin0000000000000000 )  AND ( a_3 = 0bin1111111111111111 )  AND ( a_4 = 0bin0000000000000000 ) ) OR ( ( a_0 = 0bin0000000000000000 )  AND ( a_1 = 0bin0000000000000000 )  AND ( a_2 = 0bin0000000000000000 )  AND ( a_3 = 0bin0000000000000000 )  AND ( a_4 = 0bin1111111111111111 ) ) );
ASSERT( ( ( a_5 = 0bin1111111111111111 ) AND ( a_6 = 0bin0000000000000000 ) AND ( a_7 = 0bin0000000000000000 ) AND ( a_8 = 0bin0000000000000000 ) AND ( a_9 = 0bin0000000000000000 ) ) OR ( ( a_5 = 0bin0000000000000000 )  AND ( a_6 = 0bin1111111111111111 )  AND ( a_7 = 0bin0000000000000000 )  AND ( a_8 = 0bin0000000000000000 )  AND ( a_9 = 0bin0000000000000000 ) ) OR ( ( a_5 = 0bin0000000000000000 )  AND ( a_6 = 0bin0000000000000000 )  AND ( a_7 = 0bin1111111111111111 )  AND ( a_8 = 0bin0000000000000000 )  AND ( a_9 = 0bin0000000000000000 ) ) OR ( ( a_5 = 0bin0000000000000000 )  AND ( a_6 = 0bin0000000000000000 )  AND ( a_7 = 0bin0000000000000000 )  AND ( a_8 = 0bin1111111111111111 )  AND ( a_9 = 0bin0000000000000000 ) ) OR ( ( a_5 = 0bin0000000000000000 )  AND ( a_6 = 0bin0000000000000000 )  AND ( a_7 = 0bin0000000000000000 )  AND ( a_8 = 0bin0000000000000000 )  AND ( a_9 = 0bin1111111111111111 ) ) );
ASSERT( ( ( a_10 = 0bin1111111111111111 ) AND ( a_11 = 0bin0000000000000000 ) AND ( a_12 = 0bin0000000000000000 ) AND ( a_13 = 0bin0000000000000000 ) AND ( a_14 = 0bin0000000000000000 ) ) OR ( ( a_10 = 0bin0000000000000000 )  AND ( a_11 = 0bin1111111111111111 )  AND ( a_12 = 0bin0000000000000000 )  AND ( a_13 = 0bin0000000000000000 )  AND ( a_14 = 0bin0000000000000000 ) ) OR ( ( a_10 = 0bin0000000000000000 )  AND ( a_11 = 0bin0000000000000000 )  AND ( a_12 = 0bin1111111111111111 )  AND ( a_13 = 0bin0000000000000000 )  AND ( a_14 = 0bin0000000000000000 ) ) OR ( ( a_10 = 0bin0000000000000000 )  AND ( a_11 = 0bin0000000000000000 )  AND ( a_12 = 0bin0000000000000000 )  AND ( a_13 = 0bin1111111111111111 )  AND ( a_14 = 0bin0000000000000000 ) ) OR ( ( a_10 = 0bin0000000000000000 )  AND ( a_11 = 0bin0000000000000000 )  AND ( a_12 = 0bin0000000000000000 )  AND ( a_13 = 0bin0000000000000000 )  AND ( a_14 = 0bin1111111111111111 ) ) );
ASSERT( ( ( a_15 = 0bin1111111111111111 ) AND ( a_16 = 0bin0000000000000000 ) AND ( a_17 = 0bin0000000000000000 ) AND ( a_18 = 0bin0000000000000000 ) AND ( a_19 = 0bin0000000000000000 ) ) OR ( ( a_15 = 0bin0000000000000000 )  AND ( a_16 = 0bin1111111111111111 )  AND ( a_17 = 0bin0000000000000000 )  AND ( a_18 = 0bin0000000000000000 )  AND ( a_19 = 0bin0000000000000000 ) ) OR ( ( a_15 = 0bin0000000000000000 )  AND ( a_16 = 0bin0000000000000000 )  AND ( a_17 = 0bin1111111111111111 )  AND ( a_18 = 0bin0000000000000000 )  AND ( a_19 = 0bin0000000000000000 ) ) OR ( ( a_15 = 0bin0000000000000000 )  AND ( a_16 = 0bin0000000000000000 )  AND ( a_17 = 0bin0000000000000000 )  AND ( a_18 = 0bin1111111111111111 )  AND ( a_19 = 0bin0000000000000000 ) ) OR ( ( a_15 = 0bin0000000000000000 )  AND ( a_16 = 0bin0000000000000000 )  AND ( a_17 = 0bin0000000000000000 )  AND ( a_18 = 0bin0000000000000000 )  AND ( a_19 = 0bin1111111111111111 ) ) );
ASSERT( ( ( a_20 = 0bin1111111111111111 ) AND ( a_21 = 0bin0000000000000000 ) AND ( a_22 = 0bin0000000000000000 ) AND ( a_23 = 0bin0000000000000000 ) AND ( a_24 = 0bin0000000000000000 ) ) OR ( ( a_20 = 0bin0000000000000000 )  AND ( a_21 = 0bin1111111111111111 )  AND ( a_22 = 0bin0000000000000000 )  AND ( a_23 = 0bin0000000000000000 )  AND ( a_24 = 0bin0000000000000000 ) ) OR ( ( a_20 = 0bin0000000000000000 )  AND ( a_21 = 0bin0000000000000000 )  AND ( a_22 = 0bin1111111111111111 )  AND ( a_23 = 0bin0000000000000000 )  AND ( a_24 = 0bin0000000000000000 ) ) OR ( ( a_20 = 0bin0000000000000000 )  AND ( a_21 = 0bin0000000000000000 )  AND ( a_22 = 0bin0000000000000000 )  AND ( a_23 = 0bin1111111111111111 )  AND ( a_24 = 0bin0000000000000000 ) ) OR ( ( a_20 = 0bin0000000000000000 )  AND ( a_21 = 0bin0000000000000000 )  AND ( a_22 = 0bin0000000000000000 )  AND ( a_23 = 0bin0000000000000000 )  AND ( a_24 = 0bin1111111111111111 ) ) );
ASSERT( ( ( a_25 = 0bin1111111111111111 ) AND ( a_26 = 0bin0000000000000000 ) AND ( a_27 = 0bin0000000000000000 ) AND ( a_28 = 0bin0000000000000000 ) AND ( a_29 = 0bin0000000000000000 ) ) OR ( ( a_25 = 0bin0000000000000000 )  AND ( a_26 = 0bin1111111111111111 )  AND ( a_27 = 0bin0000000000000000 )  AND ( a_28 = 0bin0000000000000000 )  AND ( a_29 = 0bin0000000000000000 ) ) OR ( ( a_25 = 0bin0000000000000000 )  AND ( a_26 = 0bin0000000000000000 )  AND ( a_27 = 0bin1111111111111111 )  AND ( a_28 = 0bin0000000000000000 )  AND ( a_29 = 0bin0000000000000000 ) ) OR ( ( a_25 = 0bin0000000000000000 )  AND ( a_26 = 0bin0000000000000000 )  AND ( a_27 = 0bin0000000000000000 )  AND ( a_28 = 0bin1111111111111111 )  AND ( a_29 = 0bin0000000000000000 ) ) OR ( ( a_25 = 0bin0000000000000000 )  AND ( a_26 = 0bin0000000000000000 )  AND ( a_27 = 0bin0000000000000000 )  AND ( a_28 = 0bin0000000000000000 )  AND ( a_29 = 0bin1111111111111111 ) ) );
ASSERT( ( ( a_30 = 0bin1111111111111111 ) AND ( a_31 = 0bin0000000000000000 ) AND ( a_32 = 0bin0000000000000000 ) AND ( a_33 = 0bin0000000000000000 ) AND ( a_34 = 0bin0000000000000000 ) ) OR ( ( a_30 = 0bin0000000000000000 )  AND ( a_31 = 0bin1111111111111111 )  AND ( a_32 = 0bin0000000000000000 )  AND ( a_33 = 0bin0000000000000000 )  AND ( a_34 = 0bin0000000000000000 ) ) OR ( ( a_30 = 0bin0000000000000000 )  AND ( a_31 = 0bin0000000000000000 )  AND ( a_32 = 0bin1111111111111111 )  AND ( a_33 = 0bin0000000000000000 )  AND ( a_34 = 0bin0000000000000000 ) ) OR ( ( a_30 = 0bin0000000000000000 )  AND ( a_31 = 0bin0000000000000000 )  AND ( a_32 = 0bin0000000000000000 )  AND ( a_33 = 0bin1111111111111111 )  AND ( a_34 = 0bin0000000000000000 ) ) OR ( ( a_30 = 0bin0000000000000000 )  AND ( a_31 = 0bin0000000000000000 )  AND ( a_32 = 0bin0000000000000000 )  AND ( a_33 = 0bin0000000000000000 )  AND ( a_34 = 0bin1111111111111111 ) ) );
ASSERT( ( ( a_35 = 0bin1111111111111111 ) AND ( a_36 = 0bin0000000000000000 ) AND ( a_37 = 0bin0000000000000000 ) AND ( a_38 = 0bin0000000000000000 ) AND ( a_39 = 0bin0000000000000000 ) ) OR ( ( a_35 = 0bin0000000000000000 )  AND ( a_36 = 0bin1111111111111111 )  AND ( a_37 = 0bin0000000000000000 )  AND ( a_38 = 0bin0000000000000000 )  AND ( a_39 = 0bin0000000000000000 ) ) OR ( ( a_35 = 0bin0000000000000000 )  AND ( a_36 = 0bin0000000000000000 )  AND ( a_37 = 0bin1111111111111111 )  AND ( a_38 = 0bin0000000000000000 )  AND ( a_39 = 0bin0000000000000000 ) ) OR ( ( a_35 = 0bin0000000000000000 )  AND ( a_36 = 0bin0000000000000000 )  AND ( a_37 = 0bin0000000000000000 )  AND ( a_38 = 0bin1111111111111111 )  AND ( a_39 = 0bin0000000000000000 ) ) OR ( ( a_35 = 0bin0000000000000000 )  AND ( a_36 = 0bin0000000000000000 )  AND ( a_37 = 0bin0000000000000000 )  AND ( a_38 = 0bin0000000000000000 )  AND ( a_39 = 0bin1111111111111111 ) ) );
ASSERT( ( ( a_40 = 0bin1111111111111111 ) AND ( a_41 = 0bin0000000000000000 ) AND ( a_42 = 0bin0000000000000000 ) AND ( a_43 = 0bin0000000000000000 ) AND ( a_44 = 0bin0000000000000000 ) ) OR ( ( a_40 = 0bin0000000000000000 )  AND ( a_41 = 0bin1111111111111111 )  AND ( a_42 = 0bin0000000000000000 )  AND ( a_43 = 0bin0000000000000000 )  AND ( a_44 = 0bin0000000000000000 ) ) OR ( ( a_40 = 0bin0000000000000000 )  AND ( a_41 = 0bin0000000000000000 )  AND ( a_42 = 0bin1111111111111111 )  AND ( a_43 = 0bin0000000000000000 )  AND ( a_44 = 0bin0000000000000000 ) ) OR ( ( a_40 = 0bin0000000000000000 )  AND ( a_41 = 0bin0000000000000000 )  AND ( a_42 = 0bin0000000000000000 )  AND ( a_43 = 0bin1111111111111111 )  AND ( a_44 = 0bin0000000000000000 ) ) OR ( ( a_40 = 0bin0000000000000000 )  AND ( a_41 = 0bin0000000000000000 )  AND ( a_42 = 0bin0000000000000000 )  AND ( a_43 = 0bin0000000000000000 )  AND ( a_44 = 0bin1111111111111111 ) ) );
ASSERT( a_0 & a_5 = 0bin0000000000000000 );
ASSERT( a_0 & a_10 = 0bin0000000000000000 );
ASSERT( a_5 & a_10 = 0bin0000000000000000 );
ASSERT( a_1 & a_6 = 0bin0000000000000000 );
ASSERT( a_1 & a_11 = 0bin0000000000000000 );
ASSERT( a_6 & a_11 = 0bin0000000000000000 );
ASSERT( a_2 & a_7 = 0bin0000000000000000 );
ASSERT( a_2 & a_12 = 0bin0000000000000000 );
ASSERT( a_7 & a_12 = 0bin0000000000000000 );
ASSERT( a_3 & a_8 = 0bin0000000000000000 );
ASSERT( a_3 & a_13 = 0bin0000000000000000 );
ASSERT( a_8 & a_13 = 0bin0000000000000000 );
ASSERT( a_4 & a_9 = 0bin0000000000000000 );
ASSERT( a_4 & a_14 = 0bin0000000000000000 );
ASSERT( a_9 & a_14 = 0bin0000000000000000 );
ASSERT( a_15 & a_20 = 0bin0000000000000000 );
ASSERT( a_15 & a_25 = 0bin0000000000000000 );
ASSERT( a_20 & a_25 = 0bin0000000000000000 );
ASSERT( a_16 & a_21 = 0bin0000000000000000 );
ASSERT( a_16 & a_26 = 0bin0000000000000000 );
ASSERT( a_21 & a_26 = 0bin0000000000000000 );
ASSERT( a_17 & a_22 = 0bin0000000000000000 );
ASSERT( a_17 & a_27 = 0bin0000000000000000 );
ASSERT( a_22 & a_27 = 0bin0000000000000000 );
ASSERT( a_18 & a_23 = 0bin0000000000000000 );
ASSERT( a_18 & a_28 = 0bin0000000000000000 );
ASSERT( a_23 & a_28 = 0bin0000000000000000 );
ASSERT( a_19 & a_24 = 0bin0000000000000000 );
ASSERT( a_19 & a_29 = 0bin0000000000000000 );
ASSERT( a_24 & a_29 = 0bin0000000000000000 );
ASSERT( a_30 & a_35 = 0bin0000000000000000 );
ASSERT( a_30 & a_40 = 0bin0000000000000000 );
ASSERT( a_35 & a_40 = 0bin0000000000000000 );
ASSERT( a_31 & a_36 = 0bin0000000000000000 );
ASSERT( a_31 & a_41 = 0bin0000000000000000 );
ASSERT( a_36 & a_41 = 0bin0000000000000000 );
ASSERT( a_32 & a_37 = 0bin0000000000000000 );
ASSERT( a_32 & a_42 = 0bin0000000000000000 );
ASSERT( a_37 & a_42 = 0bin0000000000000000 );
ASSERT( a_33 & a_38 = 0bin0000000000000000 );
ASSERT( a_33 & a_43 = 0bin0000000000000000 );
ASSERT( a_38 & a_43 = 0bin0000000000000000 );
ASSERT( a_34 & a_39 = 0bin0000000000000000 );
ASSERT( a_34 & a_44 = 0bin0000000000000000 );
ASSERT( a_39 & a_44 = 0bin0000000000000000 );
ASSERT( b_0 = 0bin1111111111111111 OR b_0 = 0bin0000000000000000 ); 
ASSERT( b_1 = 0bin1111111111111111 OR b_1 = 0bin0000000000000000 ); 
ASSERT( b_2 = 0bin1111111111111111 OR b_2 = 0bin0000000000000000 ); 
ASSERT( b_3 = 0bin1111111111111111 OR b_3 = 0bin0000000000000000 ); 
ASSERT( b_4 = 0bin1111111111111111 OR b_4 = 0bin0000000000000000 ); 
ASSERT( b_5 = 0bin1111111111111111 OR b_5 = 0bin0000000000000000 ); 
ASSERT( b_0 & b_1 = 0bin0000000000000000 );
ASSERT( b_2 & b_3 = 0bin0000000000000000 );
ASSERT( b_4 & b_5 = 0bin0000000000000000 );
ASSERT( c_0 = BVXOR( a_0, a_5 ) );
ASSERT( c_1 = BVXOR( a_1, a_6 ) );
ASSERT( c_2 = BVXOR( a_2, a_7 ) );
ASSERT( c_3 = BVXOR( a_3, a_8 ) );
ASSERT( c_4 = BVXOR( a_4, a_9 ) );
ASSERT( c_5 = BVXOR( a_15, a_20 ) );
ASSERT( c_6 = BVXOR( a_16, a_21 ) );
ASSERT( c_7 = BVXOR( a_17, a_22 ) );
ASSERT( c_8 = BVXOR( a_18, a_23 ) );
ASSERT( c_9 = BVXOR( a_19, a_24 ) );
ASSERT( c_10 = BVXOR( a_30, a_35 ) );
ASSERT( c_11 = BVXOR( a_31, a_36 ) );
ASSERT( c_12 = BVXOR( a_32, a_37 ) );
ASSERT( c_13 = BVXOR( a_33, a_38 ) );
ASSERT( c_14 = BVXOR( a_34, a_39 ) );
ASSERT( d_0 = BVXOR( c_0, a_10 ) );
ASSERT( d_1 = BVXOR( c_1, a_11 ) );
ASSERT( d_2 = BVXOR( c_2, a_12 ) );
ASSERT( d_3 = BVXOR( c_3, a_13 ) );
ASSERT( d_4 = BVXOR( c_4, a_14 ) );
ASSERT( d_5 = BVXOR( c_5, a_25 ) );
ASSERT( d_6 = BVXOR( c_6, a_26 ) );
ASSERT( d_7 = BVXOR( c_7, a_27 ) );
ASSERT( d_8 = BVXOR( c_8, a_28 ) );
ASSERT( d_9 = BVXOR( c_9, a_29 ) );
ASSERT( d_10 = BVXOR( c_10, a_40 ) );
ASSERT( d_11 = BVXOR( c_11, a_41 ) );
ASSERT( d_12 = BVXOR( c_12, a_42 ) );
ASSERT( d_13 = BVXOR( c_13, a_43 ) );
ASSERT( d_14 = BVXOR( c_14, a_44 ) );
ASSERT( Q_0 = BVXOR( a_0 & X_0[0bin000000] , BVXOR( a_1 & X_1[0bin000000] , BVXOR( a_2 & X_2[0bin000000] , BVXOR( a_3 & X_3[0bin000000] , a_4 & Anc_0[0bin000000] ) ) ) ) ) ;
ASSERT( Q_1 = BVXOR( a_5 & X_0[0bin000000] , BVXOR( a_6 & X_1[0bin000000] , BVXOR( a_7 & X_2[0bin000000] , BVXOR( a_8 & X_3[0bin000000] , a_9 & Anc_0[0bin000000] ) ) ) ) ) ;
ASSERT( Q_2 = BVXOR( a_10 & X_0[0bin000000] , BVXOR( a_11 & X_1[0bin000000] , BVXOR( a_12 & X_2[0bin000000] , BVXOR( a_13 & X_3[0bin000000] , a_14 & Anc_0[0bin000000] ) ) ) ) ) ;
ASSERT( T_0 = BVXOR( Q_0 , BVXOR( Q_1 , BVXOR( b_0 & Q_1 , BVXOR( b_0 & Q_1 & Q_2 , BVXOR( b_1 & Q_1 , b_1 ) ) ) ) ) ); 
ASSERT( ( Q_0 = X_0[0bin000000] ) => ( ( X_0[0bin000001] = T_0 ) AND ( X_1[0bin000001] = X_1[0bin000000] ) AND ( X_2[0bin000001] = X_2[0bin000000] ) AND ( X_3[0bin000001] = X_3[0bin000000] ) AND ( Anc_0[0bin000001] = Anc_0[0bin000000] ) ) ); 
ASSERT( ( Q_0 = X_1[0bin000000] ) => ( ( X_1[0bin000001] = T_0 ) AND ( X_2[0bin000001] = X_2[0bin000000] ) AND ( X_3[0bin000001] = X_3[0bin000000] ) AND ( X_0[0bin000001] = X_0[0bin000000] ) AND ( Anc_0[0bin000001] = Anc_0[0bin000000] ) ) ); 
ASSERT( ( Q_0 = X_2[0bin000000] ) => ( ( X_2[0bin000001] = T_0 ) AND ( X_3[0bin000001] = X_3[0bin000000] ) AND ( X_0[0bin000001] = X_0[0bin000000] ) AND ( X_1[0bin000001] = X_1[0bin000000] ) AND ( Anc_0[0bin000001] = Anc_0[0bin000000] ) ) ); 
ASSERT( ( Q_0 = X_3[0bin000000] ) => ( ( X_3[0bin000001] = T_0 ) AND ( X_0[0bin000001] = X_0[0bin000000] ) AND ( X_1[0bin000001] = X_1[0bin000000] ) AND ( X_2[0bin000001] = X_2[0bin000000] ) AND ( Anc_0[0bin000001] = Anc_0[0bin000000] ) ) ); 
ASSERT( ( Q_0 = Anc_0[0bin000000] ) => ( ( Anc_0[0bin000001] = T_0 ) AND ( X_0[0bin000001] = X_0[0bin000000] ) AND ( X_1[0bin000001] = X_1[0bin000000] ) AND ( X_2[0bin000001] = X_2[0bin000000] ) AND ( X_3[0bin000001] = X_3[0bin000000] ) ) ); 
ASSERT( ( b_0[0:0]@b_1[0:0]@a_0[0:0] = 0bin011 ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000001) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( b_0[0:0]@b_1[0:0]@a_1[0:0] = 0bin011 ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000001) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( b_0[0:0]@b_1[0:0]@a_2[0:0] = 0bin011 ) => ( ( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000001) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) ) );
ASSERT( ( b_0[0:0]@b_1[0:0]@a_3[0:0] = 0bin011 ) => ( ( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000001) ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) ) );
ASSERT( ( b_0[0:0]@b_1[0:0]@a_4[0:0] = 0bin011 ) => ( ( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000001) ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_0[0:0]@c_1[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000000], depth_1[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000001) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000001) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_0[0:0]@c_1[0:0] = 0bin0011 ) AND ( BVGT(depth_1[0bin000000], depth_0[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000001) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000001) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_0[0:0]@c_2[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000000], depth_2[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000001) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000001) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_0[0:0]@c_2[0:0] = 0bin0011 ) AND ( BVGT(depth_2[0bin000000], depth_0[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000001) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000001) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_0[0:0]@c_3[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000000], depth_3[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000001) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000001) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_0[0:0]@c_3[0:0] = 0bin0011 ) AND ( BVGT(depth_3[0bin000000], depth_0[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000001) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000001) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_0[0:0]@c_4[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000001) ) AND( depth_4[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000001) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_0[0:0]@c_4[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000000], depth_0[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000001) ) AND( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000001) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_1[0:0]@c_2[0:0] = 0bin0011 ) AND ( BVGE(depth_1[0bin000000], depth_2[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000001) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000001) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_1[0:0]@c_2[0:0] = 0bin0011 ) AND ( BVGT(depth_2[0bin000000], depth_1[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000001) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000001) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_1[0:0]@c_3[0:0] = 0bin0011 ) AND ( BVGE(depth_1[0bin000000], depth_3[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000001) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000001) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_1[0:0]@c_3[0:0] = 0bin0011 ) AND ( BVGT(depth_3[0bin000000], depth_1[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000001) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000001) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_1[0:0]@c_4[0:0] = 0bin0011 ) AND ( BVGE(depth_1[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000001) ) AND( depth_4[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000001) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_1[0:0]@c_4[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000000], depth_1[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000001) ) AND( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000001) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_2[0:0]@c_3[0:0] = 0bin0011 ) AND ( BVGE(depth_2[0bin000000], depth_3[0bin000000] ) ) ) => ( ( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000001) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000001) ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_2[0:0]@c_3[0:0] = 0bin0011 ) AND ( BVGT(depth_3[0bin000000], depth_2[0bin000000] ) ) ) => ( ( depth_2[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000001) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000001) ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_2[0:0]@c_4[0:0] = 0bin0011 ) AND ( BVGE(depth_2[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000001) ) AND( depth_4[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000001) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_2[0:0]@c_4[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000000], depth_2[0bin000000] ) ) ) => ( ( depth_2[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000001) ) AND( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000001) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_3[0:0]@c_4[0:0] = 0bin0011 ) AND ( BVGE(depth_3[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000001) ) AND( depth_4[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000001) ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@c_3[0:0]@c_4[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000000], depth_3[0bin000000] ) ) ) => ( ( depth_3[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000001) ) AND( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000001) ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_1[0:0]@d_2[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000000], depth_1[0bin000000] ) ) AND ( BVGE(depth_0[0bin000000], depth_2[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_1[0:0]@d_2[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000000], depth_0[0bin000000] ) ) AND ( BVGE(depth_1[0bin000000], depth_2[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_1[0:0]@d_2[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000000], depth_1[0bin000000] ) ) AND ( BVGE(depth_2[0bin000000], depth_0[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_1[0:0]@d_3[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000000], depth_1[0bin000000] ) ) AND ( BVGE(depth_0[0bin000000], depth_3[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_1[0:0]@d_3[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000000], depth_0[0bin000000] ) ) AND ( BVGE(depth_1[0bin000000], depth_3[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_1[0:0]@d_3[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000000], depth_1[0bin000000] ) ) AND ( BVGE(depth_3[0bin000000], depth_0[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_1[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000000], depth_1[0bin000000] ) ) AND ( BVGE(depth_0[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_1[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000000], depth_0[0bin000000] ) ) AND ( BVGE(depth_1[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_1[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000000], depth_1[0bin000000] ) ) AND ( BVGE(depth_4[0bin000000], depth_0[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND( depth_1[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_2[0:0]@d_3[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000000], depth_2[0bin000000] ) ) AND ( BVGE(depth_0[0bin000000], depth_3[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_2[0:0]@d_3[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000000], depth_0[0bin000000] ) ) AND ( BVGE(depth_2[0bin000000], depth_3[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_2[0:0]@d_3[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000000], depth_2[0bin000000] ) ) AND ( BVGE(depth_3[0bin000000], depth_0[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_2[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000000], depth_2[0bin000000] ) ) AND ( BVGE(depth_0[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_2[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000000], depth_0[0bin000000] ) ) AND ( BVGE(depth_2[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_2[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000000], depth_2[0bin000000] ) ) AND ( BVGE(depth_4[0bin000000], depth_0[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_3[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000000], depth_3[0bin000000] ) ) AND ( BVGE(depth_0[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_0[0bin000000], 0bin0000000000000111) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_3[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000000], depth_0[0bin000000] ) ) AND ( BVGE(depth_3[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_0[0:0]@d_3[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000000], depth_3[0bin000000] ) ) AND ( BVGE(depth_4[0bin000000], depth_0[0bin000000] ) ) ) => ( ( depth_0[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_1[0:0]@d_2[0:0]@d_3[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000000], depth_2[0bin000000] ) ) AND ( BVGE(depth_1[0bin000000], depth_3[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_1[0:0]@d_2[0:0]@d_3[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000000], depth_1[0bin000000] ) ) AND ( BVGE(depth_2[0bin000000], depth_3[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_1[0:0]@d_2[0:0]@d_3[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000000], depth_2[0bin000000] ) ) AND ( BVGE(depth_3[0bin000000], depth_1[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = depth_4[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_1[0:0]@d_2[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000000], depth_2[0bin000000] ) ) AND ( BVGE(depth_1[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_1[0:0]@d_2[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000000], depth_1[0bin000000] ) ) AND ( BVGE(depth_2[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_1[0:0]@d_2[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000000], depth_2[0bin000000] ) ) AND ( BVGE(depth_4[0bin000000], depth_1[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND( depth_2[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_3[0bin000001] = depth_3[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_1[0:0]@d_3[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000000], depth_3[0bin000000] ) ) AND ( BVGE(depth_1[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_1[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_1[0:0]@d_3[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000000], depth_1[0bin000000] ) ) AND ( BVGE(depth_3[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_1[0:0]@d_3[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000000], depth_3[0bin000000] ) ) AND ( BVGE(depth_4[0bin000000], depth_1[0bin000000] ) ) ) => ( ( depth_1[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_2[0bin000001] = depth_2[0bin000000] ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_2[0:0]@d_3[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000000], depth_3[0bin000000] ) ) AND ( BVGE(depth_2[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_2[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_2[0bin000000], 0bin0000000000000111) ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_2[0:0]@d_3[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000000], depth_2[0bin000000] ) ) AND ( BVGE(depth_3[0bin000000], depth_4[0bin000000] ) ) ) => ( ( depth_2[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_3[0bin000000], 0bin0000000000000111) ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) ) );
ASSERT( ( ( b_0[0:0]@b_1[0:0]@d_2[0:0]@d_3[0:0]@d_4[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000000], depth_3[0bin000000] ) ) AND ( BVGE(depth_4[0bin000000], depth_2[0bin000000] ) ) ) => ( ( depth_2[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND( depth_3[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_4[0bin000001] = BVPLUS(16, depth_4[0bin000000], 0bin0000000000000111) ) AND ( depth_0[0bin000001] = depth_0[0bin000000] ) AND ( depth_1[0bin000001] = depth_1[0bin000000] ) ) );
ASSERT( Q_3 = BVXOR( a_15 & X_0[0bin000001] , BVXOR( a_16 & X_1[0bin000001] , BVXOR( a_17 & X_2[0bin000001] , BVXOR( a_18 & X_3[0bin000001] , a_19 & Anc_0[0bin000001] ) ) ) ) ) ;
ASSERT( Q_4 = BVXOR( a_20 & X_0[0bin000001] , BVXOR( a_21 & X_1[0bin000001] , BVXOR( a_22 & X_2[0bin000001] , BVXOR( a_23 & X_3[0bin000001] , a_24 & Anc_0[0bin000001] ) ) ) ) ) ;
ASSERT( Q_5 = BVXOR( a_25 & X_0[0bin000001] , BVXOR( a_26 & X_1[0bin000001] , BVXOR( a_27 & X_2[0bin000001] , BVXOR( a_28 & X_3[0bin000001] , a_29 & Anc_0[0bin000001] ) ) ) ) ) ;
ASSERT( T_1 = BVXOR( Q_3 , BVXOR( Q_4 , BVXOR( b_2 & Q_4 , BVXOR( b_2 & Q_4 & Q_5 , BVXOR( b_3 & Q_4 , b_3 ) ) ) ) ) ); 
ASSERT( ( Q_3 = X_0[0bin000001] ) => ( ( X_0[0bin000010] = T_1 ) AND ( X_1[0bin000010] = X_1[0bin000001] ) AND ( X_2[0bin000010] = X_2[0bin000001] ) AND ( X_3[0bin000010] = X_3[0bin000001] ) AND ( Anc_0[0bin000010] = Anc_0[0bin000001] ) ) ); 
ASSERT( ( Q_3 = X_1[0bin000001] ) => ( ( X_1[0bin000010] = T_1 ) AND ( X_2[0bin000010] = X_2[0bin000001] ) AND ( X_3[0bin000010] = X_3[0bin000001] ) AND ( X_0[0bin000010] = X_0[0bin000001] ) AND ( Anc_0[0bin000010] = Anc_0[0bin000001] ) ) ); 
ASSERT( ( Q_3 = X_2[0bin000001] ) => ( ( X_2[0bin000010] = T_1 ) AND ( X_3[0bin000010] = X_3[0bin000001] ) AND ( X_0[0bin000010] = X_0[0bin000001] ) AND ( X_1[0bin000010] = X_1[0bin000001] ) AND ( Anc_0[0bin000010] = Anc_0[0bin000001] ) ) ); 
ASSERT( ( Q_3 = X_3[0bin000001] ) => ( ( X_3[0bin000010] = T_1 ) AND ( X_0[0bin000010] = X_0[0bin000001] ) AND ( X_1[0bin000010] = X_1[0bin000001] ) AND ( X_2[0bin000010] = X_2[0bin000001] ) AND ( Anc_0[0bin000010] = Anc_0[0bin000001] ) ) ); 
ASSERT( ( Q_3 = Anc_0[0bin000001] ) => ( ( Anc_0[0bin000010] = T_1 ) AND ( X_0[0bin000010] = X_0[0bin000001] ) AND ( X_1[0bin000010] = X_1[0bin000001] ) AND ( X_2[0bin000010] = X_2[0bin000001] ) AND ( X_3[0bin000010] = X_3[0bin000001] ) ) ); 
ASSERT( ( b_2[0:0]@b_3[0:0]@a_15[0:0] = 0bin011 ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000001) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( b_2[0:0]@b_3[0:0]@a_16[0:0] = 0bin011 ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000001) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( b_2[0:0]@b_3[0:0]@a_17[0:0] = 0bin011 ) => ( ( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000001) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) ) );
ASSERT( ( b_2[0:0]@b_3[0:0]@a_18[0:0] = 0bin011 ) => ( ( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000001) ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) ) );
ASSERT( ( b_2[0:0]@b_3[0:0]@a_19[0:0] = 0bin011 ) => ( ( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000001) ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_5[0:0]@c_6[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000001], depth_1[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000001) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000001) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_5[0:0]@c_6[0:0] = 0bin0011 ) AND ( BVGT(depth_1[0bin000001], depth_0[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000001) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000001) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_5[0:0]@c_7[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000001], depth_2[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000001) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000001) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_5[0:0]@c_7[0:0] = 0bin0011 ) AND ( BVGT(depth_2[0bin000001], depth_0[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000001) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000001) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_5[0:0]@c_8[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000001], depth_3[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000001) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000001) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_5[0:0]@c_8[0:0] = 0bin0011 ) AND ( BVGT(depth_3[0bin000001], depth_0[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000001) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000001) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_5[0:0]@c_9[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000001) ) AND( depth_4[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000001) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_5[0:0]@c_9[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000001], depth_0[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000001) ) AND( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000001) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_6[0:0]@c_7[0:0] = 0bin0011 ) AND ( BVGE(depth_1[0bin000001], depth_2[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000001) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000001) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_6[0:0]@c_7[0:0] = 0bin0011 ) AND ( BVGT(depth_2[0bin000001], depth_1[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000001) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000001) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_6[0:0]@c_8[0:0] = 0bin0011 ) AND ( BVGE(depth_1[0bin000001], depth_3[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000001) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000001) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_6[0:0]@c_8[0:0] = 0bin0011 ) AND ( BVGT(depth_3[0bin000001], depth_1[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000001) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000001) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_6[0:0]@c_9[0:0] = 0bin0011 ) AND ( BVGE(depth_1[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000001) ) AND( depth_4[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000001) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_6[0:0]@c_9[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000001], depth_1[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000001) ) AND( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000001) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_7[0:0]@c_8[0:0] = 0bin0011 ) AND ( BVGE(depth_2[0bin000001], depth_3[0bin000001] ) ) ) => ( ( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000001) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000001) ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_7[0:0]@c_8[0:0] = 0bin0011 ) AND ( BVGT(depth_3[0bin000001], depth_2[0bin000001] ) ) ) => ( ( depth_2[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000001) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000001) ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_7[0:0]@c_9[0:0] = 0bin0011 ) AND ( BVGE(depth_2[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000001) ) AND( depth_4[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000001) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_7[0:0]@c_9[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000001], depth_2[0bin000001] ) ) ) => ( ( depth_2[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000001) ) AND( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000001) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_8[0:0]@c_9[0:0] = 0bin0011 ) AND ( BVGE(depth_3[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000001) ) AND( depth_4[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000001) ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@c_8[0:0]@c_9[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000001], depth_3[0bin000001] ) ) ) => ( ( depth_3[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000001) ) AND( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000001) ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_6[0:0]@d_7[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000001], depth_1[0bin000001] ) ) AND ( BVGE(depth_0[0bin000001], depth_2[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_6[0:0]@d_7[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000001], depth_0[0bin000001] ) ) AND ( BVGE(depth_1[0bin000001], depth_2[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_6[0:0]@d_7[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000001], depth_1[0bin000001] ) ) AND ( BVGE(depth_2[0bin000001], depth_0[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_6[0:0]@d_8[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000001], depth_1[0bin000001] ) ) AND ( BVGE(depth_0[0bin000001], depth_3[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_6[0:0]@d_8[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000001], depth_0[0bin000001] ) ) AND ( BVGE(depth_1[0bin000001], depth_3[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_6[0:0]@d_8[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000001], depth_1[0bin000001] ) ) AND ( BVGE(depth_3[0bin000001], depth_0[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_6[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000001], depth_1[0bin000001] ) ) AND ( BVGE(depth_0[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_6[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000001], depth_0[0bin000001] ) ) AND ( BVGE(depth_1[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_6[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000001], depth_1[0bin000001] ) ) AND ( BVGE(depth_4[0bin000001], depth_0[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND( depth_1[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_7[0:0]@d_8[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000001], depth_2[0bin000001] ) ) AND ( BVGE(depth_0[0bin000001], depth_3[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_7[0:0]@d_8[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000001], depth_0[0bin000001] ) ) AND ( BVGE(depth_2[0bin000001], depth_3[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_7[0:0]@d_8[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000001], depth_2[0bin000001] ) ) AND ( BVGE(depth_3[0bin000001], depth_0[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_7[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000001], depth_2[0bin000001] ) ) AND ( BVGE(depth_0[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_7[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000001], depth_0[0bin000001] ) ) AND ( BVGE(depth_2[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_7[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000001], depth_2[0bin000001] ) ) AND ( BVGE(depth_4[0bin000001], depth_0[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_8[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000001], depth_3[0bin000001] ) ) AND ( BVGE(depth_0[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_0[0bin000001], 0bin0000000000000111) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_8[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000001], depth_0[0bin000001] ) ) AND ( BVGE(depth_3[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_5[0:0]@d_8[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000001], depth_3[0bin000001] ) ) AND ( BVGE(depth_4[0bin000001], depth_0[0bin000001] ) ) ) => ( ( depth_0[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_6[0:0]@d_7[0:0]@d_8[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000001], depth_2[0bin000001] ) ) AND ( BVGE(depth_1[0bin000001], depth_3[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_6[0:0]@d_7[0:0]@d_8[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000001], depth_1[0bin000001] ) ) AND ( BVGE(depth_2[0bin000001], depth_3[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_6[0:0]@d_7[0:0]@d_8[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000001], depth_2[0bin000001] ) ) AND ( BVGE(depth_3[0bin000001], depth_1[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = depth_4[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_6[0:0]@d_7[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000001], depth_2[0bin000001] ) ) AND ( BVGE(depth_1[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_6[0:0]@d_7[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000001], depth_1[0bin000001] ) ) AND ( BVGE(depth_2[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_6[0:0]@d_7[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000001], depth_2[0bin000001] ) ) AND ( BVGE(depth_4[0bin000001], depth_1[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND( depth_2[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_3[0bin000010] = depth_3[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_6[0:0]@d_8[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000001], depth_3[0bin000001] ) ) AND ( BVGE(depth_1[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_1[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_6[0:0]@d_8[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000001], depth_1[0bin000001] ) ) AND ( BVGE(depth_3[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_6[0:0]@d_8[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000001], depth_3[0bin000001] ) ) AND ( BVGE(depth_4[0bin000001], depth_1[0bin000001] ) ) ) => ( ( depth_1[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_2[0bin000010] = depth_2[0bin000001] ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_7[0:0]@d_8[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000001], depth_3[0bin000001] ) ) AND ( BVGE(depth_2[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_2[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_2[0bin000001], 0bin0000000000000111) ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_7[0:0]@d_8[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000001], depth_2[0bin000001] ) ) AND ( BVGE(depth_3[0bin000001], depth_4[0bin000001] ) ) ) => ( ( depth_2[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_3[0bin000001], 0bin0000000000000111) ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) ) );
ASSERT( ( ( b_2[0:0]@b_3[0:0]@d_7[0:0]@d_8[0:0]@d_9[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000001], depth_3[0bin000001] ) ) AND ( BVGE(depth_4[0bin000001], depth_2[0bin000001] ) ) ) => ( ( depth_2[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND( depth_3[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_4[0bin000010] = BVPLUS(16, depth_4[0bin000001], 0bin0000000000000111) ) AND ( depth_0[0bin000010] = depth_0[0bin000001] ) AND ( depth_1[0bin000010] = depth_1[0bin000001] ) ) );
ASSERT( Q_6 = BVXOR( a_30 & X_0[0bin000010] , BVXOR( a_31 & X_1[0bin000010] , BVXOR( a_32 & X_2[0bin000010] , BVXOR( a_33 & X_3[0bin000010] , a_34 & Anc_0[0bin000010] ) ) ) ) ) ;
ASSERT( Q_7 = BVXOR( a_35 & X_0[0bin000010] , BVXOR( a_36 & X_1[0bin000010] , BVXOR( a_37 & X_2[0bin000010] , BVXOR( a_38 & X_3[0bin000010] , a_39 & Anc_0[0bin000010] ) ) ) ) ) ;
ASSERT( Q_8 = BVXOR( a_40 & X_0[0bin000010] , BVXOR( a_41 & X_1[0bin000010] , BVXOR( a_42 & X_2[0bin000010] , BVXOR( a_43 & X_3[0bin000010] , a_44 & Anc_0[0bin000010] ) ) ) ) ) ;
ASSERT( T_2 = BVXOR( Q_6 , BVXOR( Q_7 , BVXOR( b_4 & Q_7 , BVXOR( b_4 & Q_7 & Q_8 , BVXOR( b_5 & Q_7 , b_5 ) ) ) ) ) ); 
ASSERT( ( Q_6 = X_0[0bin000010] ) => ( ( X_0[0bin000011] = T_2 ) AND ( X_1[0bin000011] = X_1[0bin000010] ) AND ( X_2[0bin000011] = X_2[0bin000010] ) AND ( X_3[0bin000011] = X_3[0bin000010] ) AND ( Anc_0[0bin000011] = Anc_0[0bin000010] ) ) ); 
ASSERT( ( Q_6 = X_1[0bin000010] ) => ( ( X_1[0bin000011] = T_2 ) AND ( X_2[0bin000011] = X_2[0bin000010] ) AND ( X_3[0bin000011] = X_3[0bin000010] ) AND ( X_0[0bin000011] = X_0[0bin000010] ) AND ( Anc_0[0bin000011] = Anc_0[0bin000010] ) ) ); 
ASSERT( ( Q_6 = X_2[0bin000010] ) => ( ( X_2[0bin000011] = T_2 ) AND ( X_3[0bin000011] = X_3[0bin000010] ) AND ( X_0[0bin000011] = X_0[0bin000010] ) AND ( X_1[0bin000011] = X_1[0bin000010] ) AND ( Anc_0[0bin000011] = Anc_0[0bin000010] ) ) ); 
ASSERT( ( Q_6 = X_3[0bin000010] ) => ( ( X_3[0bin000011] = T_2 ) AND ( X_0[0bin000011] = X_0[0bin000010] ) AND ( X_1[0bin000011] = X_1[0bin000010] ) AND ( X_2[0bin000011] = X_2[0bin000010] ) AND ( Anc_0[0bin000011] = Anc_0[0bin000010] ) ) ); 
ASSERT( ( Q_6 = Anc_0[0bin000010] ) => ( ( Anc_0[0bin000011] = T_2 ) AND ( X_0[0bin000011] = X_0[0bin000010] ) AND ( X_1[0bin000011] = X_1[0bin000010] ) AND ( X_2[0bin000011] = X_2[0bin000010] ) AND ( X_3[0bin000011] = X_3[0bin000010] ) ) ); 
ASSERT( ( b_4[0:0]@b_5[0:0]@a_30[0:0] = 0bin011 ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000001) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( b_4[0:0]@b_5[0:0]@a_31[0:0] = 0bin011 ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000001) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( b_4[0:0]@b_5[0:0]@a_32[0:0] = 0bin011 ) => ( ( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000001) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) ) );
ASSERT( ( b_4[0:0]@b_5[0:0]@a_33[0:0] = 0bin011 ) => ( ( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000001) ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) ) );
ASSERT( ( b_4[0:0]@b_5[0:0]@a_34[0:0] = 0bin011 ) => ( ( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000001) ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_10[0:0]@c_11[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000010], depth_1[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000001) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000001) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_10[0:0]@c_11[0:0] = 0bin0011 ) AND ( BVGT(depth_1[0bin000010], depth_0[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000001) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000001) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_10[0:0]@c_12[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000010], depth_2[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000001) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000001) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_10[0:0]@c_12[0:0] = 0bin0011 ) AND ( BVGT(depth_2[0bin000010], depth_0[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000001) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000001) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_10[0:0]@c_13[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000010], depth_3[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000001) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000001) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_10[0:0]@c_13[0:0] = 0bin0011 ) AND ( BVGT(depth_3[0bin000010], depth_0[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000001) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000001) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_10[0:0]@c_14[0:0] = 0bin0011 ) AND ( BVGE(depth_0[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000001) ) AND( depth_4[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000001) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_10[0:0]@c_14[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000010], depth_0[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000001) ) AND( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000001) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_11[0:0]@c_12[0:0] = 0bin0011 ) AND ( BVGE(depth_1[0bin000010], depth_2[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000001) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000001) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_11[0:0]@c_12[0:0] = 0bin0011 ) AND ( BVGT(depth_2[0bin000010], depth_1[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000001) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000001) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_11[0:0]@c_13[0:0] = 0bin0011 ) AND ( BVGE(depth_1[0bin000010], depth_3[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000001) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000001) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_11[0:0]@c_13[0:0] = 0bin0011 ) AND ( BVGT(depth_3[0bin000010], depth_1[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000001) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000001) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_11[0:0]@c_14[0:0] = 0bin0011 ) AND ( BVGE(depth_1[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000001) ) AND( depth_4[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000001) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_11[0:0]@c_14[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000010], depth_1[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000001) ) AND( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000001) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_12[0:0]@c_13[0:0] = 0bin0011 ) AND ( BVGE(depth_2[0bin000010], depth_3[0bin000010] ) ) ) => ( ( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000001) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000001) ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_12[0:0]@c_13[0:0] = 0bin0011 ) AND ( BVGT(depth_3[0bin000010], depth_2[0bin000010] ) ) ) => ( ( depth_2[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000001) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000001) ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_12[0:0]@c_14[0:0] = 0bin0011 ) AND ( BVGE(depth_2[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000001) ) AND( depth_4[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000001) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_12[0:0]@c_14[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000010], depth_2[0bin000010] ) ) ) => ( ( depth_2[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000001) ) AND( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000001) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_13[0:0]@c_14[0:0] = 0bin0011 ) AND ( BVGE(depth_3[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000001) ) AND( depth_4[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000001) ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@c_13[0:0]@c_14[0:0] = 0bin0011 ) AND ( BVGT(depth_4[0bin000010], depth_3[0bin000010] ) ) ) => ( ( depth_3[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000001) ) AND( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000001) ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_11[0:0]@d_12[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000010], depth_1[0bin000010] ) ) AND ( BVGE(depth_0[0bin000010], depth_2[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_11[0:0]@d_12[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000010], depth_0[0bin000010] ) ) AND ( BVGE(depth_1[0bin000010], depth_2[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_11[0:0]@d_12[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000010], depth_1[0bin000010] ) ) AND ( BVGE(depth_2[0bin000010], depth_0[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_11[0:0]@d_13[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000010], depth_1[0bin000010] ) ) AND ( BVGE(depth_0[0bin000010], depth_3[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_11[0:0]@d_13[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000010], depth_0[0bin000010] ) ) AND ( BVGE(depth_1[0bin000010], depth_3[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_11[0:0]@d_13[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000010], depth_1[0bin000010] ) ) AND ( BVGE(depth_3[0bin000010], depth_0[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_11[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000010], depth_1[0bin000010] ) ) AND ( BVGE(depth_0[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_11[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000010], depth_0[0bin000010] ) ) AND ( BVGE(depth_1[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_11[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000010], depth_1[0bin000010] ) ) AND ( BVGE(depth_4[0bin000010], depth_0[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND( depth_1[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_12[0:0]@d_13[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000010], depth_2[0bin000010] ) ) AND ( BVGE(depth_0[0bin000010], depth_3[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_12[0:0]@d_13[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000010], depth_0[0bin000010] ) ) AND ( BVGE(depth_2[0bin000010], depth_3[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_12[0:0]@d_13[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000010], depth_2[0bin000010] ) ) AND ( BVGE(depth_3[0bin000010], depth_0[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_12[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000010], depth_2[0bin000010] ) ) AND ( BVGE(depth_0[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_12[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000010], depth_0[0bin000010] ) ) AND ( BVGE(depth_2[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_12[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000010], depth_2[0bin000010] ) ) AND ( BVGE(depth_4[0bin000010], depth_0[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_13[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_0[0bin000010], depth_3[0bin000010] ) ) AND ( BVGE(depth_0[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_0[0bin000010], 0bin0000000000000111) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_13[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000010], depth_0[0bin000010] ) ) AND ( BVGE(depth_3[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_10[0:0]@d_13[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000010], depth_3[0bin000010] ) ) AND ( BVGE(depth_4[0bin000010], depth_0[0bin000010] ) ) ) => ( ( depth_0[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_11[0:0]@d_12[0:0]@d_13[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000010], depth_2[0bin000010] ) ) AND ( BVGE(depth_1[0bin000010], depth_3[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_11[0:0]@d_12[0:0]@d_13[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000010], depth_1[0bin000010] ) ) AND ( BVGE(depth_2[0bin000010], depth_3[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_11[0:0]@d_12[0:0]@d_13[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000010], depth_2[0bin000010] ) ) AND ( BVGE(depth_3[0bin000010], depth_1[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = depth_4[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_11[0:0]@d_12[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000010], depth_2[0bin000010] ) ) AND ( BVGE(depth_1[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_11[0:0]@d_12[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000010], depth_1[0bin000010] ) ) AND ( BVGE(depth_2[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_11[0:0]@d_12[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000010], depth_2[0bin000010] ) ) AND ( BVGE(depth_4[0bin000010], depth_1[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND( depth_2[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_3[0bin000011] = depth_3[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_11[0:0]@d_13[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_1[0bin000010], depth_3[0bin000010] ) ) AND ( BVGE(depth_1[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_1[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_11[0:0]@d_13[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000010], depth_1[0bin000010] ) ) AND ( BVGE(depth_3[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_11[0:0]@d_13[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000010], depth_3[0bin000010] ) ) AND ( BVGE(depth_4[0bin000010], depth_1[0bin000010] ) ) ) => ( ( depth_1[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_2[0bin000011] = depth_2[0bin000010] ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_12[0:0]@d_13[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_2[0bin000010], depth_3[0bin000010] ) ) AND ( BVGE(depth_2[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_2[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_2[0bin000010], 0bin0000000000000111) ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_12[0:0]@d_13[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_3[0bin000010], depth_2[0bin000010] ) ) AND ( BVGE(depth_3[0bin000010], depth_4[0bin000010] ) ) ) => ( ( depth_2[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_3[0bin000010], 0bin0000000000000111) ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) ) );
ASSERT( ( ( b_4[0:0]@b_5[0:0]@d_12[0:0]@d_13[0:0]@d_14[0:0] = 0bin10111 ) AND ( BVGE(depth_4[0bin000010], depth_3[0bin000010] ) ) AND ( BVGE(depth_4[0bin000010], depth_2[0bin000010] ) ) ) => ( ( depth_2[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND( depth_3[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_4[0bin000011] = BVPLUS(16, depth_4[0bin000010], 0bin0000000000000111) ) AND ( depth_0[0bin000011] = depth_0[0bin000010] ) AND ( depth_1[0bin000011] = depth_1[0bin000010] ) ) );
ASSERT( ( Y_0 = X_0[0bin000011] ) OR ( Y_0 = X_1[0bin000011] ) OR ( Y_0 = X_2[0bin000011] ) OR ( Y_0 = X_3[0bin000011] ) OR ( Y_0 = Anc_0[0bin000011] ) );
ASSERT( ( Y_1 = X_0[0bin000011] ) OR ( Y_1 = X_1[0bin000011] ) OR ( Y_1 = X_2[0bin000011] ) OR ( Y_1 = X_3[0bin000011] ) OR ( Y_1 = Anc_0[0bin000011] ) );
ASSERT( ( Y_2 = X_0[0bin000011] ) OR ( Y_2 = X_1[0bin000011] ) OR ( Y_2 = X_2[0bin000011] ) OR ( Y_2 = X_3[0bin000011] ) OR ( Y_2 = Anc_0[0bin000011] ) );
ASSERT( ( Y_3 = X_0[0bin000011] ) OR ( Y_3 = X_1[0bin000011] ) OR ( Y_3 = X_2[0bin000011] ) OR ( Y_3 = X_3[0bin000011] ) OR ( Y_3 = Anc_0[0bin000011] ) );
ASSERT( BVLT(depth_0[0bin000011], 0bin0000000000011110) );
ASSERT( BVLT(depth_1[0bin000011], 0bin0000000000011110) );
ASSERT( BVLT(depth_2[0bin000011], 0bin0000000000011110) );
ASSERT( BVLT(depth_3[0bin000011], 0bin0000000000011110) );
ASSERT( BVLT(depth_4[0bin000011], 0bin0000000000011110) );
QUERY(FALSE);
COUNTEREXAMPLE;
